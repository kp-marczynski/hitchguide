{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","components/Map/MapContext.ts","components/Layers/Layers.tsx","components/Layers/VectorLayer.tsx","components/Layers/TileLayer.tsx","components/Map/Map.tsx","utils/kmlUtil.ts","pages/MapTab.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","MapContext","React","createContext","undefined","Layers","children","VectorLayer","source","style","zIndex","minZoom","maxZoom","useContext","useEffect","vectorLayer","OLVectorLayer","on","evt","console","log","addLayer","setZIndex","removeLayer","TileLayer","tileLayer","OLTileLayer","selectedFeature","Feature","setStyle","Style","image","CircleStyle","radius","fill","Fill","color","Map","view","mapRef","useRef","useState","setMap","alert","setAlert","document","addEventListener","updateSize","select","Select","selected","getProperties","name","description","setGeometry","geometry","getFeatures","clear","options","layers","controls","overlays","interactions","DragPan","MouseWheelZoom","PinchZoom","DoubleClickZoom","tilePixelRatio","mapObject","ol","setTarget","current","drawerRef","drawerContentRef","openDrawer","transition","transform","currentDrawer","createGesture","el","gestureName","direction","onEnd","event","deltaY","dataset","open","closeDrawer","enable","onMove","preventDefault","c","Provider","value","ref","className","VectorSource","features","classNames","bottomDrawer","hiddenCard","textAlign","size","height","width","onClick","dangerouslySetInnerHTML","__html","overflowY","getStyle","score","positionFeature","stroke","Stroke","viewFromLonLat","View","projection","center","fromLonLat","zoom","geolocation","Geolocation","trackingOptions","enableHighAccuracy","getProjection","accuracyFeature","getAccuracyGeometry","setTracking","coordinates","getPosition","Point","visibilityState","kmlCircleFeature","text","Text","scale","MapTab","loadMap","setLoadMap","kmlString","setKmlString","setTimeout","fetch","process","headers","r","json","kml","poi","i","p","t","d","l","s","join","scrollY","position","TileWMS","url","params","LAYERS","TILED","FORMAT","attributions","KML","showPointNames","readFeatures","dataProjection","featureProjection","href","vertical","horizontal","slot","animate","rotation","icon","locate","filename","kmlBlob","Blob","type","saveAs","saveKmlToFile","cloudDownload","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mIAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,IACA,GAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,0BAA2B,CAC1B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B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","file":"static/js/main.944dd172.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t177,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t178,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t179,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t180,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t181,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t182,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t183,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t184,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t185,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t186,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t187,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t188,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t189,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t190,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t191,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t192,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t193,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t194,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t195,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t196,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t197,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t198,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t199,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t200,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t201,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t202,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t203,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t204,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t205,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t206,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t207,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t208,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t209,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t210,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t211,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t212,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t213,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t214,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t215,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t216,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t217,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t218,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t219,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 159;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t221,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 161;\nmodule.exports = webpackAsyncContext;","import React from \"react\";\r\n\r\nconst MapContext = React.createContext<any>(undefined);\r\nexport default MapContext;\r\n","import React from \"react\";\r\n\r\nconst Layers = ({children}: any) => {\r\n    return <div>{children}</div>;\r\n};\r\n\r\nexport default Layers;\r\n","import {useContext, useEffect} from \"react\";\r\nimport MapContext from \"../Map/MapContext\";\r\nimport OLVectorLayer from \"ol/layer/Vector\";\r\n\r\nconst VectorLayer = ({source, style = undefined, zIndex = 0, minZoom = 0, maxZoom = 14}: any) => {\r\n    const {map} = useContext(MapContext);\r\n\r\n    useEffect(() => {\r\n        if (!map) return;\r\n\r\n        let vectorLayer = new OLVectorLayer({\r\n            source,\r\n            style,\r\n            minZoom,\r\n            maxZoom\r\n        });\r\n\r\n        vectorLayer.on(\"featureclick\", evt => console.log(evt))\r\n\r\n        map.addLayer(vectorLayer);\r\n        vectorLayer.setZIndex(zIndex);\r\n\r\n        return () => {\r\n            if (map) {\r\n                map.removeLayer(vectorLayer);\r\n            }\r\n        };\r\n    }, [map]);\r\n\r\n    return null;\r\n};\r\n\r\nexport default VectorLayer;\r\n","import {useContext, useEffect} from \"react\";\r\nimport MapContext from \"../Map/MapContext\";\r\nimport OLTileLayer from \"ol/layer/Tile\";\r\n\r\nconst TileLayer = ({source, zIndex = 0}: any) => {\r\n    const {map} = useContext(MapContext);\r\n\r\n    useEffect(() => {\r\n        if (!map) return;\r\n\r\n        let tileLayer = new OLTileLayer({\r\n            source,\r\n            zIndex\r\n        });\r\n\r\n        map.addLayer(tileLayer);\r\n        tileLayer.setZIndex(zIndex);\r\n\r\n        return () => {\r\n            if (map) {\r\n                map.removeLayer(tileLayer);\r\n            }\r\n        };\r\n    }, [map]);\r\n\r\n    return null;\r\n};\r\n\r\nexport default TileLayer;\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport \"./Map.css\";\r\nimport MapContext from \"./MapContext\";\r\nimport * as ol from \"ol\";\r\nimport {DoubleClickZoom, DragPan, MouseWheelZoom, PinchZoom, Select} from 'ol/interaction';\r\nimport {createGesture, IonButton, IonCard, IonCardContent, IonCardHeader, IonCardTitle} from \"@ionic/react\";\r\nimport classNames from \"classnames\";\r\nimport Feature from \"ol/Feature\";\r\nimport {Circle as CircleStyle, Fill, Style} from \"ol/style\";\r\nimport {Vector as VectorSource} from \"ol/source\";\r\nimport {Layers, VectorLayer} from \"../Layers\";\r\n\r\ntype MapProps = {\r\n    children: any;\r\n    view: any;\r\n}\r\n\r\nconst selectedFeature = new Feature();\r\nselectedFeature.setStyle(new Style({\r\n    image: new CircleStyle({\r\n        radius: 20,\r\n        fill: new Fill({\r\n            color: 'rgba(51,153,204,0.75)'\r\n        })\r\n    })\r\n}));\r\nconst Map = ({children, view}: MapProps) => {\r\n    const mapRef: any = useRef();\r\n    const [map, setMap] = useState<any>(null);\r\n    const [alert, setAlert] = useState<any>(null)\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('visibilitychange', () => {\r\n            map?.updateSize()\r\n        })\r\n\r\n    }, [map])\r\n\r\n    useEffect(() => {\r\n        const select = new Select()\r\n        select.on(\"select\", evt => {\r\n            if (evt.selected[0].getProperties()?.name || evt.selected[0].getProperties()?.description) {\r\n                console.log(evt.selected[0].getProperties())\r\n                selectedFeature.setGeometry(evt.selected[0].getProperties().geometry);\r\n                setAlert(evt.selected[0].getProperties());\r\n            }\r\n            select.getFeatures().clear()\r\n        })\r\n\r\n        let options = {\r\n            view: view,\r\n            layers: [],\r\n            controls: [],\r\n            overlays: [],\r\n            interactions: [\r\n                new DragPan(),\r\n                new MouseWheelZoom(),\r\n                new PinchZoom(),\r\n                new DoubleClickZoom(),\r\n                select\r\n            ],\r\n            tilePixelRatio: 1\r\n        };\r\n\r\n        let mapObject: any = new ol.Map(options);\r\n        mapObject.setTarget(mapRef.current);\r\n        setMap(mapObject);\r\n\r\n        return () => mapObject.setTarget(undefined);\r\n    }, []);\r\n\r\n    const drawerRef: any = useRef();\r\n    const drawerContentRef: any = useRef();\r\n\r\n    useEffect(() => {\r\n        if (alert) {\r\n            openDrawer()\r\n        } else {\r\n            drawerRef.current.style.transition = \".5s ease-out\";\r\n            drawerRef.current.style.transform = `translateY(${25}px) `;\r\n        }\r\n    }, [alert])\r\n\r\n    useEffect(() => {\r\n        let currentDrawer = drawerRef.current;\r\n        createGesture({\r\n            el: currentDrawer,\r\n            gestureName: \"my-swipe\",\r\n            direction: \"y\",\r\n\r\n            onEnd: event => {\r\n                if (event.deltaY > 20) {\r\n                    if (currentDrawer.dataset.open === \"false\") {\r\n                        setAlert(false)\r\n                        selectedFeature.setGeometry(undefined)\r\n                    } else {\r\n                        closeDrawer()\r\n                    }\r\n                } else if (event.deltaY < -20) {\r\n                    openDrawer()\r\n                }\r\n            },\r\n        }).enable(true);\r\n\r\n        createGesture({\r\n            el: drawerContentRef.current,\r\n            gestureName: \"my-swipe2\",\r\n            direction: \"y\",\r\n            onMove: event => {\r\n                event.event.preventDefault()\r\n            }\r\n        }).enable(true);\r\n    }, []);\r\n    const toggleDrawer = () => {\r\n        let c: any = drawerRef.current;\r\n        if (c.dataset.open === \"true\") {\r\n            openDrawer()\r\n        } else {\r\n            closeDrawer()\r\n        }\r\n    };\r\n\r\n    const openDrawer = () => {\r\n        let c: any = drawerRef.current;\r\n        if (c) {\r\n            c.style.transition = \".5s ease-in\";\r\n            c.style.transform = `translateY(${-350}px) `;\r\n            c.dataset.open = \"true\";\r\n        }\r\n    }\r\n\r\n    const closeDrawer = () => {\r\n        let c: any = drawerRef.current;\r\n        if (c) {\r\n            c.style.transition = \".5s ease-out\";\r\n            c.style.transform = `translateY(${-60}px) `;\r\n            c.dataset.open = \"false\";\r\n        }\r\n    }\r\n    return (\r\n        <MapContext.Provider value={{map}}>\r\n            <div ref={mapRef} className=\"ol-map\">\r\n                {children}\r\n                <Layers>\r\n                    <VectorLayer\r\n                        source={new VectorSource({\r\n                            features: [selectedFeature]\r\n                        })}\r\n                    />\r\n                </Layers>\r\n            </div>\r\n            <IonCard ref={drawerRef} className={classNames({\r\n                bottomDrawer: true,\r\n                hiddenCard: !alert\r\n            })}>\r\n                <div style={{textAlign: \"center\"}}>\r\n                    <IonButton\r\n                        size=\"large\"\r\n                        color=\"dark\"\r\n                        style={{height: 10, width: 100}}\r\n                        onClick={toggleDrawer}\r\n                    />\r\n                </div>\r\n                <IonCardHeader>\r\n                    <IonCardTitle>{alert?.name}</IonCardTitle>\r\n                </IonCardHeader>\r\n                <IonCardContent ref={drawerContentRef}>\r\n                    <div dangerouslySetInnerHTML={{__html: alert?.description ?? \"No description\"}}\r\n                         style={{overflowY: \"scroll\", height: 275}}/>\r\n                </IonCardContent>\r\n            </IonCard>\r\n        </MapContext.Provider>\r\n    )\r\n}\r\n\r\nexport default Map;\r\n","import {saveAs} from 'file-saver';\r\n\r\ntype POI = {\r\n    i: number,\r\n    c: string,\r\n    p: string,\r\n    l: string,\r\n    s: number,\r\n    sc: number,\r\n    t: number,\r\n    tc: number,\r\n    d: string,\r\n    o: string\r\n}\r\nexport default function createKmlString(places: POI[]) {\r\n    return \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +\r\n        \"<kml xmlns=\\\"http://earth.google.com/kml/2.2\\\">\\n\" +\r\n        \"<Document>\\n\" +\r\n        \"<name>World</name>\\n\" +\r\n        \"<visibility>1</visibility>\\n\" +\r\n        \"<Style id=\\\"placemark-blue\\\">\\n\" +\r\n        \"<IconStyle><Icon><href>http://maps.google.com/mapfiles/kml/paddle/blu-circle.png</href></Icon><scale>0.75</scale></IconStyle>\\n\" +\r\n        \"<LabelStyle><scale>0.5</scale></LabelStyle>\\n\" +\r\n        \"</Style>\\n\" +\r\n        \"<Style id=\\\"placemark-green\\\">\\n\" +\r\n        \"<IconStyle><Icon><href>http://maps.google.com/mapfiles/kml/paddle/grn-circle.png</href></Icon><scale>0.75</scale></IconStyle>\\n\" +\r\n        \"<LabelStyle><scale>0.5</scale></LabelStyle>\\n\" +\r\n        \"</Style>\\n\" +\r\n        \"<Style id=\\\"placemark-yellow\\\">\\n\" +\r\n        \"<IconStyle><Icon><href>http://maps.google.com/mapfiles/kml/paddle/ylw-circle.png</href></Icon><scale>0.75</scale></IconStyle>\\n\" +\r\n        \"<LabelStyle><scale>0.5</scale></LabelStyle>\\n\" +\r\n        \"</Style>\\n\" +\r\n        \"<Style id=\\\"placemark-red\\\">\\n\" +\r\n        \"<IconStyle><Icon><href>http://maps.google.com/mapfiles/kml/paddle/red-circle.png</href></Icon><scale>0.75</scale></IconStyle>\\n\" +\r\n        \"<LabelStyle><scale>0.5</scale></LabelStyle>\\n\" +\r\n        \"</Style>\\n\" +\r\n        \"<Style id=\\\"placemark-brown\\\">\\n\" +\r\n        \"<IconStyle><Icon><href>http://maps.google.com/mapfiles/kml/paddle/wht-circle.png</href></Icon><scale>0.75</scale></IconStyle>\\n\" +\r\n        \"<LabelStyle><scale>0.5</scale></LabelStyle>\\n\" +\r\n        \"</Style>\\n\" +\r\n        \"<Style id=\\\"placemark-purple\\\">\\n\" +\r\n        \"<IconStyle><Icon><href>http://maps.google.com/mapfiles/kml/paddle/purple-circle.png</href></Icon><scale>0.75</scale></IconStyle>\\n\" +\r\n        \"<LabelStyle><scale>0.5</scale></LabelStyle>\\n\" +\r\n        \"</Style>\\n\" +\r\n        \"<Style id=\\\"placemark-orange\\\">\\n\" +\r\n        \"<IconStyle><Icon><href>http://maps.google.com/mapfiles/kml/paddle/orange-circle.png</href></Icon><scale>0.75</scale></IconStyle>\\n\" +\r\n        \"<LabelStyle><scale>0.5</scale></LabelStyle>\\n\" +\r\n        \"</Style>\\n\" +\r\n        \"<Style id=\\\"placemark-pink\\\">\\n\" +\r\n        \"<IconStyle><Icon><href>http://maps.google.com/mapfiles/kml/paddle/pink-circle.png</href></Icon><scale>0.75</scale></IconStyle>\\n\" +\r\n        \"<LabelStyle><scale>0.5</scale></LabelStyle>\\n\" +\r\n        \"</Style>\\n\" +\r\n        \"\\n\" +\r\n        places.map(poi =>\r\n            \"<Placemark xmlns=\\\"http://www.opengis.net/kml/2.2\\\" id=\\\"\" + poi.i + \"\\\">\\n\" +\r\n            \"<name>Spot \" + poi.i + \"</name>\\n\" +\r\n            \"<visibility>1</visibility>\\n\" +\r\n            \"<address>\" + poi.c + (poi.p ? \", \" + poi.p : \"\") + \"</address>\\n\" +\r\n            \"<description><![CDATA[\" +\r\n            (poi.t ? \"<b>Average waiting time: </b>\" + poi.t + \"min<br/><br/>\" : \"\") +\r\n            \"<b>Description:</b><hr/>\" + (poi.d ?? \"\") + \"<br/>\" + (poi.o ?? \"\") +\r\n            \"]]></description>\\n\" +\r\n            \"<Point><coordinates>\" + poi.l + \"</coordinates></Point>\\n\" +\r\n            \"<styleUrl>#placemark-\" + getStyle(poi.s) + \"</styleUrl>\\n\" +\r\n            \"</Placemark>\"\r\n        ).join(\"\\n\\n\") +\r\n        \"</Document>\\n\" +\r\n        \"</kml>\\n\"\r\n}\r\n\r\nconst getStyle = (score: number) => {\r\n    switch (score) {\r\n        case 5:\r\n            return \"green\"\r\n        case 4:\r\n            return \"blue\"\r\n        case 3:\r\n            return \"yellow\"\r\n        case 2:\r\n            return \"orange\"\r\n        case 1:\r\n            return \"red\"\r\n        default:\r\n            return \"purple\"\r\n    }\r\n}\r\n\r\nexport const saveKmlToFile = (filename: string, kmlString: string) => {\r\n    // console.log('saving to file');\r\n    const kmlBlob = new Blob([kmlString], {type: 'application/vnd.google-earth.kml+xml'});\r\n    saveAs(kmlBlob, filename + '.kml');\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {\r\n    IonContent,\r\n    IonFab,\r\n    IonFabButton,\r\n    IonHeader,\r\n    IonIcon,\r\n    IonItem,\r\n    IonLabel,\r\n    IonPage,\r\n    IonSelect,\r\n    IonSelectOption,\r\n    IonToolbar\r\n} from '@ionic/react';\r\nimport Map from \"../components/Map/Map\";\r\nimport {Layers, TileLayer, VectorLayer} from \"../components/Layers\";\r\n\r\nimport {fromLonLat} from 'ol/proj';\r\nimport {TileWMS, Vector as VectorSource} from 'ol/source';\r\nimport Feature from 'ol/Feature';\r\nimport Point from 'ol/geom/Point';\r\nimport {Circle as CircleStyle, Fill, Stroke, Style} from 'ol/style';\r\nimport Geolocation from 'ol/Geolocation';\r\nimport View from 'ol/View';\r\nimport './MapTab.css';\r\nimport {cloudDownload, locate} from \"ionicons/icons\";\r\nimport Text from \"ol/style/Text\";\r\nimport {KML} from \"ol/format\";\r\nimport createKmlString, {saveKmlToFile} from \"../utils/kmlUtil\";\r\n\r\nconst zoom = 12;\r\n\r\nconst positionFeature = new Feature();\r\npositionFeature.setStyle(new Style({\r\n    image: new CircleStyle({\r\n        radius: 6,\r\n        fill: new Fill({\r\n            color: '#3399CC'\r\n        }),\r\n        stroke: new Stroke({\r\n            color: '#fff',\r\n            width: 2\r\n        })\r\n    })\r\n}));\r\n\r\nconst viewFromLonLat = new View({\r\n    projection: 'EPSG:3857',\r\n    center: fromLonLat([17, 51]),\r\n    zoom: 4,\r\n    maxZoom: 14,\r\n    // minZoom: 8\r\n})\r\n\r\n\r\nconst geolocation = new Geolocation({\r\n    // enableHighAccuracy must be set to true to have the heading value.\r\n    trackingOptions: {\r\n        enableHighAccuracy: true\r\n    },\r\n    projection: viewFromLonLat.getProjection()\r\n})\r\n\r\nconst accuracyFeature = new Feature();\r\ngeolocation.on('change:accuracyGeometry', () => {\r\n    accuracyFeature.setGeometry(geolocation.getAccuracyGeometry());\r\n});\r\n\r\ngeolocation.setTracking(true)\r\ngeolocation.on('change:position', () => {\r\n    const coordinates = geolocation.getPosition();\r\n    positionFeature.setGeometry(coordinates ?\r\n        new Point(coordinates) : undefined);\r\n});\r\ndocument.addEventListener('visibilitychange', () => {\r\n    console.log(\"change1\")\r\n    geolocation.setTracking(document.visibilityState !== 'hidden')\r\n})\r\n\r\nconst kmlCircleFeature = new Feature();\r\nkmlCircleFeature.setGeometry(new Point(fromLonLat([17, 51])))\r\nkmlCircleFeature.setStyle(new Style({\r\n    image: new CircleStyle({\r\n        radius: 50,\r\n        fill: new Fill({\r\n            color: '#3399CC'\r\n        }),\r\n        stroke: new Stroke({\r\n            color: '#fff',\r\n            width: 2\r\n        })\r\n    }),\r\n    text: new Text({\r\n        text: \"42\",\r\n        scale: 5\r\n    })\r\n}))\r\n\r\nconst MapTab: React.FC = () => {\r\n    const [loadMap, setLoadMap] = useState(false)\r\n\r\n    const [kmlString, setKmlString] = useState<string | undefined>()\r\n    useEffect(() => {\r\n        setTimeout(() => setLoadMap(true), 1000)\r\n        fetch(process.env.PUBLIC_URL + '/assets/json/world.json', {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }).then((r) => r.json()).then(r => {\r\n            const kml = createKmlString(r);\r\n            // console.log(kml)\r\n            setKmlString(kml)\r\n        })\r\n    }, [])\r\n\r\n    document.addEventListener('visibilitychange', () => {\r\n        setLoadMap(false)\r\n        setTimeout(() => setLoadMap(true), 1000)\r\n    })\r\n\r\n    const navigateToCurrentPosition = () => {\r\n        const coordinates = geolocation.getPosition();\r\n        if (coordinates) {\r\n            viewFromLonLat.animate({\r\n                center: coordinates,\r\n                zoom: zoom,\r\n                rotation: 0\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <IonPage>\r\n            {/*<IonHeader>*/}\r\n            {/*    <IonToolbar>*/}\r\n            {/*        <IonItem>*/}\r\n            {/*            <IonLabel>Country</IonLabel>*/}\r\n            {/*            <IonSelect value={country} onIonChange={e => setCountry(e.detail.value)}*/}\r\n            {/*                       placeholder=\"Select Country\">*/}\r\n            {/*                <IonSelectOption value={null}/>*/}\r\n            {/*                <IonSelectOption value=\"Poland\">Poland</IonSelectOption>*/}\r\n            {/*                <IonSelectOption value=\"Poland2\">Poland2</IonSelectOption>*/}\r\n            {/*                <IonSelectOption value=\"Germany\">Germany</IonSelectOption>*/}\r\n            {/*            </IonSelect>*/}\r\n            {/*        </IonItem>*/}\r\n            {/*    </IonToolbar>*/}\r\n            {/*</IonHeader>*/}\r\n            <IonContent scrollY={false}>\r\n                {loadMap &&\r\n                <div style={{width: \"100%\", height: \"100%\", position: \"static\"}} id=\"map-container\">\r\n                    <Map view={viewFromLonLat}>\r\n                        <Layers>\r\n                            <TileLayer\r\n                                source={\r\n                                    new TileWMS({\r\n                                        url: 'https://ows.terrestris.de/osm/service?',\r\n                                        params: {\r\n                                            LAYERS: 'OSM-WMS',\r\n                                            TILED: true,\r\n                                            FORMAT: 'image/png',\r\n                                            // TRANSPARENT: true\r\n                                        },\r\n                                        attributions: [],\r\n                                        transition: 0,\r\n                                    })\r\n                                }\r\n                                zIndex={0}\r\n                            />\r\n                            {/*<TileLayer source={new TileDebug()}/>*/}\r\n                            <VectorLayer\r\n                                source={new VectorSource({\r\n                                    features: [accuracyFeature]\r\n                                })}\r\n                            />\r\n                            {/*{country &&*/}\r\n                            {/*<KmlLayer url={process.env.PUBLIC_URL + '/assets/kml/countries/' + country + '.kml'}*/}\r\n                            {/*          key={country}/>}*/}\r\n                            {kmlString && <VectorLayer\r\n                                source={new VectorSource({\r\n                                    features: new KML({showPointNames: false}).readFeatures(kmlString, {\r\n                                        dataProjection: 'EPSG:4326',\r\n                                        featureProjection: 'EPSG:3857'\r\n                                    })\r\n                                })}\r\n                                minZoom={8}\r\n                            />}\r\n                            {/*<VectorLayer*/}\r\n                            {/*    source={new VectorSource({*/}\r\n                            {/*        features: [kmlCircleFeature]*/}\r\n                            {/*    })}*/}\r\n                            {/*    maxZoom={8}*/}\r\n                            {/*/>*/}\r\n                            <VectorLayer\r\n                                source={new VectorSource({\r\n                                    features: [positionFeature]\r\n                                })}\r\n                            />\r\n                        </Layers>\r\n                        {/*<Controls>*/}\r\n                        {/*    <FullScreenControl/>*/}\r\n                        {/*</Controls>*/}\r\n                    </Map>\r\n                    <div className={\"attribution\"} id=\"attribution\">© <a\r\n                        href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors\r\n                    </div>\r\n                    <div className={\"versionNumber\"}>{process.env.REACT_APP_NAME} v{process.env.REACT_APP_VERSION}</div>\r\n                    <IonFab vertical=\"top\" horizontal=\"end\" slot=\"fixed\">\r\n                        <IonFabButton onClick={navigateToCurrentPosition}>\r\n                            <IonIcon icon={locate}/>\r\n                        </IonFabButton>\r\n                    </IonFab>\r\n                    {kmlString && <IonFab vertical=\"top\" horizontal=\"start\" slot=\"fixed\">\r\n                        <IonFabButton onClick={() => saveKmlToFile(\"world\", kmlString)}>\r\n                            <IonIcon icon={cloudDownload}/>\r\n                        </IonFabButton>\r\n                    </IonFab> }\r\n                </div>}\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default MapTab;\r\n","import React from 'react';\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport {IonApp, IonIcon, IonLabel, IonRouterOutlet, IonTabBar, IonTabButton, IonTabs} from '@ionic/react';\r\nimport {IonReactRouter} from '@ionic/react-router';\r\nimport {business, earth, language} from 'ionicons/icons';\r\nimport MapTab from './pages/MapTab';\r\n/* Core CSS required for Ionic components to work properly */\r\nimport '@ionic/react/css/core.css';\r\n/* Basic CSS for apps built with Ionic */\r\nimport '@ionic/react/css/normalize.css';\r\nimport '@ionic/react/css/structure.css';\r\nimport '@ionic/react/css/typography.css';\r\n/* Optional CSS utils that can be commented out */\r\nimport '@ionic/react/css/padding.css';\r\nimport '@ionic/react/css/float-elements.css';\r\nimport '@ionic/react/css/text-alignment.css';\r\nimport '@ionic/react/css/text-transformation.css';\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '@ionic/react/css/display.css';\r\n/* Theme variables */\r\nimport './theme/variables.css';\r\n\r\nconst App: React.FC = () => (\r\n    <IonApp>\r\n        <MapTab/>\r\n        {/*<IonReactRouter>*/}\r\n        {/*    <IonTabs>*/}\r\n        {/*        <IonRouterOutlet>*/}\r\n        {/*            <Route path=\"/map\" component={MapTab} exact={true}/>*/}\r\n        {/*            /!*<Route path=\"/countries\" component={CountriesTab} exact={true}/>*!/*/}\r\n        {/*            /!*<Route path=\"/phrasebook\" component={PhrasebookTab}/>*!/*/}\r\n        {/*            <Route path=\"/\" render={() => <Redirect to=\"/map\"/>} exact={true}/>*/}\r\n        {/*        </IonRouterOutlet>*/}\r\n        {/*        <IonTabBar slot=\"bottom\">*/}\r\n        {/*            <IonTabButton tab=\"map\" href=\"/map\">*/}\r\n        {/*                <IonIcon icon={earth}/>*/}\r\n        {/*                <IonLabel>Map</IonLabel>*/}\r\n        {/*            </IonTabButton>*/}\r\n        {/*            <IonTabButton tab=\"countries\" href=\"/countries\">*/}\r\n        {/*                <IonIcon icon={business}/>*/}\r\n        {/*                <IonLabel>Countries</IonLabel>*/}\r\n        {/*            </IonTabButton>*/}\r\n        {/*            <IonTabButton tab=\"phrasebook\" href=\"/phrasebook\">*/}\r\n        {/*                <IonIcon icon={language}/>*/}\r\n        {/*                <IonLabel>Phrasebook</IonLabel>*/}\r\n        {/*            </IonTabButton>*/}\r\n        {/*        </IonTabBar>*/}\r\n        {/*    </IonTabs>*/}\r\n        {/*</IonReactRouter>*/}\r\n    </IonApp>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        );\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}